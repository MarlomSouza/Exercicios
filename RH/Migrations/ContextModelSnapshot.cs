// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RH.Models;
using System;

namespace RH.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RH.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("RH.Models.CandidatoTecnologia", b =>
                {
                    b.Property<int>("CandidatoId");

                    b.Property<int>("TecnologiaId");

                    b.HasKey("CandidatoId", "TecnologiaId");

                    b.HasIndex("TecnologiaId");

                    b.ToTable("CandidatoTecnologia");
                });

            modelBuilder.Entity("RH.Models.CandidatoTriagem", b =>
                {
                    b.Property<int>("CandidatoId");

                    b.Property<int>("TriagemId");

                    b.HasKey("CandidatoId", "TriagemId");

                    b.HasIndex("TriagemId");

                    b.ToTable("CandidatoTriagem");
                });

            modelBuilder.Entity("RH.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("RH.Models.ProcessoTecnologia", b =>
                {
                    b.Property<int>("ProcessoId");

                    b.Property<int>("TecnologiaId");

                    b.Property<int>("Peso");

                    b.HasKey("ProcessoId", "TecnologiaId");

                    b.HasIndex("TecnologiaId");

                    b.ToTable("ProcessoTecnologia");
                });

            modelBuilder.Entity("RH.Models.Tecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Tecnologias");
                });

            modelBuilder.Entity("RH.Models.Triagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProcessoId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId")
                        .IsUnique();

                    b.ToTable("Triagens");
                });

            modelBuilder.Entity("RH.Models.CandidatoTecnologia", b =>
                {
                    b.HasOne("RH.Models.Candidato", "Candidato")
                        .WithMany("Tecnologias")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RH.Models.Tecnologia", "Tecnologia")
                        .WithMany("Candidatos")
                        .HasForeignKey("TecnologiaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RH.Models.CandidatoTriagem", b =>
                {
                    b.HasOne("RH.Models.Candidato", "Candidato")
                        .WithMany("Triagens")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RH.Models.Triagem", "Triagem")
                        .WithMany("Candidatos")
                        .HasForeignKey("TriagemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RH.Models.ProcessoTecnologia", b =>
                {
                    b.HasOne("RH.Models.Processo", "Processo")
                        .WithMany("Tecnologias")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RH.Models.Tecnologia", "Tecnologia")
                        .WithMany("Processos")
                        .HasForeignKey("TecnologiaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RH.Models.Triagem", b =>
                {
                    b.HasOne("RH.Models.Processo", "Processo")
                        .WithOne("Triagem")
                        .HasForeignKey("RH.Models.Triagem", "ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
